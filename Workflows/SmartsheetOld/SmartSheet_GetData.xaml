<Activity mc:Ignorable="sap sap2010" x:Class="SmartSheet_GetData" this:SmartSheet_GetData.in_SmartsheetAPIToken="nggoi5y59zcgiia7vctd5q73jm" this:SmartSheet_GetData.in_SmartsheetID="3463889858914180" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sa="clr-namespace:Smartsheet.Api;assembly=smartsheet-csharp-sdk" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ubac="clr-namespace:UiPath.BAF.Activities.ContextModel;assembly=UiPath.Smartsheet.Activities" xmlns:ubme="clr-namespace:UiPath.BAF.Models.Entity;assembly=UiPath.Smartsheet" xmlns:ubt="clr-namespace:UiPath.BAF.Telemetry;assembly=UiPath.Smartsheet" xmlns:ucm="clr-namespace:UiPath.CodeGen.Model;assembly=UiPath.Smartsheet" xmlns:ucmc="clr-namespace:UiPath.CodeGen.Models.Connection;assembly=UiPath.Smartsheet" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:usa="clr-namespace:UiPath.Smartsheet.Activities;assembly=UiPath.Smartsheet.Activities" xmlns:usae="clr-namespace:UiPath.Smartsheet.Activities.Enums;assembly=UiPath.Smartsheet.Activities" xmlns:usas="clr-namespace:UiPath.Smartsheet.Activities.Sheets;assembly=UiPath.Smartsheet.Activities" xmlns:usm="clr-namespace:UiPath.Smartsheet.Models;assembly=UiPath.Smartsheet" xmlns:uss="clr-namespace:UiPath.Smartsheet.Services;assembly=UiPath.Smartsheet" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_SmartsheetAPIToken" Type="InArgument(x:String)" />
    <x:Property Name="out_SmartsheetDT" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="in_SmartsheetID" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_TempSmartSheetPath" Type="OutArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1153.3333333333333,3386</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SmartSheet_GetData_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="59">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Smartsheet.Api.Models</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.BAF.Activities</x:String>
      <x:String>UiPath.BAF.Activities.ContextModel</x:String>
      <x:String>UiPath.BAF.Enums</x:String>
      <x:String>UiPath.BAF.Models</x:String>
      <x:String>UiPath.BAF.Models.Connection</x:String>
      <x:String>UiPath.BAF.Models.Connection.APIConnection</x:String>
      <x:String>UiPath.BAF.Models.CrudOperation</x:String>
      <x:String>UiPath.BAF.Models.Entity</x:String>
      <x:String>UiPath.BAF.Models.Response</x:String>
      <x:String>UiPath.BAF.Properties</x:String>
      <x:String>UiPath.BAF.ServiceInterfaces</x:String>
      <x:String>UiPath.BAF.Telemetry</x:String>
      <x:String>UiPath.CodeGen.Activities</x:String>
      <x:String>UiPath.CodeGen.Models.Connection</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Smartsheet.Activities</x:String>
      <x:String>UiPath.Smartsheet.Activities.Comments</x:String>
      <x:String>UiPath.Smartsheet.Activities.Rows</x:String>
      <x:String>UiPath.Smartsheet.Activities.Sheets</x:String>
      <x:String>UiPath.Smartsheet.Models</x:String>
      <x:String>UiPath.Swagger.Models</x:String>
      <x:String>UiPath.Smartsheet.IntegrationService.Activities</x:String>
      <x:String>UiPath.IntegrationCore.Models</x:String>
      <x:String>UiPath.IntegrationCore.Activities</x:String>
      <x:String>UiPath.Smartsheet.IntegrationService.Client</x:String>
      <x:String>UiPath.Smartsheet.IntegrationService.Client</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="94">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>smartsheet-csharp-sdk</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Smartsheet</AssemblyReference>
      <AssemblyReference>UiPath.Smartsheet.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Smartsheet.IntegrationService</AssemblyReference>
      <AssemblyReference>UiPath.Smartsheet.IntegrationService.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="SmartSheet_GetData" sap:VirtualizedContainerService.HintSize="593.3333333333334,3321.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="str_SmartsheetFilePath" />
      <Variable x:TypeArguments="x:Boolean" Name="bool_SmartsheetDownloaded" />
      <Variable x:TypeArguments="sd:DataTable" Default="[new DataTable()]" Name="dt_SmartsheetData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_NewSmartsheetData" />
      <Variable x:TypeArguments="x:String" Name="str_SmartsheetDownloadPath" />
      <Variable x:TypeArguments="x:Boolean" Name="bool_ReadSmartsheetSuccess" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_FilteredRevenueStream" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_FilteredCatID" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Starting Log Message" sap:VirtualizedContainerService.HintSize="551.3333333333334,96" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;SmartSheet_GetData execution started.&quot;]" />
    <Assign DisplayName="Assign Downloaded Smartsheet" sap:VirtualizedContainerService.HintSize="551.3333333333334,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[str_SmartsheetDownloadPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_Config("Smartsheet_DownloadFolder").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <usa:SmartsheetScopeActivity Connection="{x:Null}" DesignConnectionRequest="{x:Null}" ExistingConnection="{x:Null}" SelectedDesignAuthType="{x:Null}" SwaggerClient="{x:Null}" DesignConnectionEnabled="False" DisplayName="Smartsheet Billback File scope" ExistingConnectionType="usm:SmartsheetConnection" sap:VirtualizedContainerService.HintSize="551.3333333333334,468" sap2010:WorkflowViewState.IdRef="SmartsheetScopeActivity_1" RefreshCacheEnabled="False" SelectedAuthType="API Token" TelemetryEnabled="False" ThrowExceptionOnError="False">
      <usa:SmartsheetScopeActivity.Body>
        <ActivityAction x:TypeArguments="ubac:ScopeActivityContext">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ubac:ScopeActivityContext" Name="ScopeActivityContext" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Billback Smartsheet" sap:VirtualizedContainerService.HintSize="426,324" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <usas:DownloadSheet BusinessEntityName="{x:Null}" ScopeActivityType="{x:Null}" Status="{x:Null}" ConfiguredBusinessEntity="DownloadSheet" CrudOperation="Function" DesignConnectionEnabled="False" DisplayName="Download Sheet" sap:VirtualizedContainerService.HintSize="384,236.66666666666666" sap2010:WorkflowViewState.IdRef="DownloadSheet_1">
              <usas:DownloadSheet.BusinessEntity>
                <ubme:BusinessEntity AuthFields="{x:Null}" Connection="{x:Null}" Id="{x:Null}" Name="DownloadSheet">
                  <ubme:BusinessEntity.AllFields>
                    <scg:List x:TypeArguments="ubme:EntityField" Capacity="0" />
                  </ubme:BusinessEntity.AllFields>
                  <ubme:BusinessEntity.EntityMetadata>
                    <ubme:EntityMetadata Description="{x:Null}" Metadata="{x:Reference __ReferenceID0}" PrimaryFields="{x:Null}" EligibleOperations="-1" IsCustomEntity="False" Name="DownloadSheet" />
                  </ubme:BusinessEntity.EntityMetadata>
                  <ubme:BusinessEntity.Metadata>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object" x:Name="__ReferenceID0">
                      <x:Type Type="sa:SmartsheetClient" x:Key="Client" />
                    </scg:Dictionary>
                  </ubme:BusinessEntity.Metadata>
                  <ubme:BusinessEntity.SelectedFields>
                    <scg:List x:TypeArguments="ubme:EntityField" Capacity="0" />
                  </ubme:BusinessEntity.SelectedFields>
                  <ubme:BusinessEntity.TelemetryProperties>
                    <scg:Dictionary x:TypeArguments="ubt:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
                  </ubme:BusinessEntity.TelemetryProperties>
                </ubme:BusinessEntity>
              </usas:DownloadSheet.BusinessEntity>
              <usas:DownloadSheet.PopulatedAPIParameters>
                <scg:Dictionary x:TypeArguments="x:String, ubme:EntityField" />
              </usas:DownloadSheet.PopulatedAPIParameters>
              <usas:DownloadSheet.SelectedFields>
                <scg:List x:TypeArguments="ubme:EntityField" Capacity="4">
                  <ucm:CodeGenEntityField x:TypeArguments="x:Int64" ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" InOutArgumentValue="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" OutArgumentValue="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:Int64" DataType="Int64" Description="The Id of the sheet" DisplayName="Sheet ID" FieldName="Sheet ID" FormDataType="ExpressionTextBox" InArgumentValue="[Convert.ToInt64(in_SmartsheetID)]" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="True" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <InArgument x:TypeArguments="x:Int64">[Convert.ToInt64(in_SmartsheetID)]</InArgument>
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField x:TypeArguments="usae:SheetDocumentFormat" ArgumentValue="{x:Null}" ContainingType="{x:Null}" FieldFullName="{x:Null}" InArgumentValue="{x:Null}" InOutArgumentValue="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" OutArgumentValue="{x:Null}" SampleValue="{x:Null}" ArgumentDirection="In" ArgumentType="usae:SheetDocumentFormat" DataType="SheetDocumentFormat" Description="The format you wish to download to" DisplayName="Document Format" FieldName="Document Format" FormDataType="ComboBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="True">
                    <ucm:CodeGenEntityField.DefaultValue>
                      <usae:SheetDocumentFormat>CSV</usae:SheetDocumentFormat>
                    </ucm:CodeGenEntityField.DefaultValue>
                    <ucm:CodeGenEntityField.Value>
                      <usae:SheetDocumentFormat>Excel</usae:SheetDocumentFormat>
                    </ucm:CodeGenEntityField.Value>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField x:TypeArguments="x:String" ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" InOutArgumentValue="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" OutArgumentValue="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:String" DataType="String" Description="The path to the download folder" DisplayName="Local Download Folder" FieldName="Local Download Folder" FormDataType="FolderPicker" InArgumentValue="[str_SmartsheetDownloadPath]" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="True" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <InArgument x:TypeArguments="x:String">[str_SmartsheetDownloadPath]</InArgument>
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                </scg:List>
              </usas:DownloadSheet.SelectedFields>
              <usas:DownloadSheet.ServiceFactory>
                <uss:SmartsheetServiceFactory />
              </usas:DownloadSheet.ServiceFactory>
              <usas:DownloadSheet.TelemetryProperties>
                <scg:Dictionary x:TypeArguments="ubt:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
              </usas:DownloadSheet.TelemetryProperties>
            </usas:DownloadSheet>
          </Sequence>
        </ActivityAction>
      </usa:SmartsheetScopeActivity.Body>
      <usa:SmartsheetScopeActivity.ConnectionParameters>
        <scg:List x:TypeArguments="ucmc:ConnectionParam" Capacity="4">
          <ucmc:ConnectionParam x:TypeArguments="x:String" Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:String" Description="The API token to use" GenericArgumentValue="[in_SmartsheetAPIToken]" Mandatory="True" Name="API Access Token">
            <ucmc:ConnectionParam.ArgumentValue>
              <InArgument x:TypeArguments="x:String">[in_SmartsheetAPIToken]</InArgument>
            </ucmc:ConnectionParam.ArgumentValue>
          </ucmc:ConnectionParam>
        </scg:List>
      </usa:SmartsheetScopeActivity.ConnectionParameters>
      <usa:SmartsheetScopeActivity.DesignConnectionParameters>
        <scg:List x:TypeArguments="ucmc:ConnectionParam" Capacity="0" />
      </usa:SmartsheetScopeActivity.DesignConnectionParameters>
      <usa:SmartsheetScopeActivity.ServiceFactory>
        <uss:SmartsheetServiceFactory />
      </usa:SmartsheetScopeActivity.ServiceFactory>
      <usa:SmartsheetScopeActivity.SupportedAuthTypes>
        <scg:List x:TypeArguments="x:String" Capacity="4">
          <x:String>Existing Connection</x:String>
          <x:String>OAuth</x:String>
          <x:String>API Token</x:String>
          <x:String xml:space="preserve">OAuth Passthrough </x:String>
        </scg:List>
      </usa:SmartsheetScopeActivity.SupportedAuthTypes>
      <usa:SmartsheetScopeActivity.TelemetryProperties>
        <scg:Dictionary x:TypeArguments="ubt:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
      </usa:SmartsheetScopeActivity.TelemetryProperties>
    </usa:SmartsheetScopeActivity>
    <Assign DisplayName="Assign FilePath" sap:VirtualizedContainerService.HintSize="551.3333333333334,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[str_SmartsheetFilePath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Directory.GetFiles(str_SmartsheetDownloadPath)(0)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:FileExistsX DisplayName="Check if smartsheet File Exists" Exists="[bool_SmartsheetDownloaded]" sap:VirtualizedContainerService.HintSize="551.3333333333334,136.66666666666666" sap2010:WorkflowViewState.IdRef="FileExistsX_1" Path="[str_SmartsheetFilePath]" />
    <If Condition="[bool_SmartsheetDownloaded]" DisplayName="If file downloaded" sap:VirtualizedContainerService.HintSize="551.3333333333334,357.3333333333333" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,81.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_13">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Then>
      <If.Else>
        <Delay DisplayName=" Delay 5 seconds" Duration="00:00:05" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="Delay_2" />
      </If.Else>
    </If>
    <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[bool_ReadSmartsheetSuccess]" DisplayName="Do until excel is accesible" sap:VirtualizedContainerService.HintSize="551.3333333333334,1002" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
      <ui:InterruptibleDoWhile.Body>
        <TryCatch DisplayName="Try Till excel is accesible" sap:VirtualizedContainerService.HintSize="514.6666666666666,831.3333333333334" sap2010:WorkflowViewState.IdRef="TryCatch_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch.Try>
            <Sequence DisplayName="Smartsheet Try" sap:VirtualizedContainerService.HintSize="476,592" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,379.3333333333333" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[str_SmartsheetFilePath]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,269.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="SheetName" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelGetWorkbookSheet DisplayName="Get Workbook Sheet" sap:VirtualizedContainerService.HintSize="334,82" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheet_1" Index="0" Sheet="[SheetName]" />
                      <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_SmartsheetData]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="[SheetName]">
                        <ui:ExcelReadRange.Range>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:ExcelReadRange.Range>
                      </ui:ExcelReadRange>
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
              </ui:ExcelApplicationScope>
              <Assign DisplayName="Assign Readsmartsheet" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[bool_ReadSmartsheetSuccess]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="480.6666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Exception" sap:VirtualizedContainerService.HintSize="476,304.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign Readsmartsheet as true" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[bool_ReadSmartsheetSuccess]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Delay DisplayName=" Delay 1 second" Duration="00:00:01" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="Delay_3" />
                </Sequence>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </ui:InterruptibleDoWhile.Body>
    </ui:InterruptibleDoWhile>
    <ui:FilterDataTable DataTable="[dt_SmartsheetData]" DisplayName="Filter Non Processed Rows" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="551.3333333333334,164" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[dt_NewSmartsheetData]" SelectColumnsMode="Keep">
      <ui:FilterDataTable.Filters>
        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
          <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Invoice Attached Status"]</InArgument>
            </ui:FilterOperationArgument.Column>
            <ui:FilterOperationArgument.Operand>
              <InArgument x:TypeArguments="x:String">["Yes"]</InArgument>
            </ui:FilterOperationArgument.Operand>
          </ui:FilterOperationArgument>
          <ui:FilterOperationArgument BooleanOperator="Or" Operator="EQ">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Invoice Attached Status"]</InArgument>
            </ui:FilterOperationArgument.Column>
            <ui:FilterOperationArgument.Operand>
              <InArgument x:TypeArguments="x:String">["No"]</InArgument>
            </ui:FilterOperationArgument.Operand>
          </ui:FilterOperationArgument>
        </scg:List>
      </ui:FilterDataTable.Filters>
      <ui:FilterDataTable.SelectColumns>
        <scg:List x:TypeArguments="InArgument" Capacity="4">
          <x:Null />
        </scg:List>
      </ui:FilterDataTable.SelectColumns>
    </ui:FilterDataTable>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="551.3333333333334,54" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_14">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="FIlter Datatable to process Revenue Stream" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataTable">[dt_FilteredRevenueStream]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[dt_NewSmartsheetData.AsEnumerable().Where(Function(row) row("Revenue Stream").ToString.Trim.Contains("PDS") OR  row("Revenue Stream").ToString.Trim.Contains("DPS")).CopyToDataTable()]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:FilterDataTable DataTable="[dt_NewSmartsheetData]" DisplayName="Filter Blank and IR CatID" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="551.3333333333334,164" sap2010:WorkflowViewState.IdRef="FilterDataTable_4" OutputDataTable="[out_SmartsheetDT]" SelectColumnsMode="Keep">
      <ui:FilterDataTable.Filters>
        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
          <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Catalyst Invoice ID"]</InArgument>
            </ui:FilterOperationArgument.Column>
          </ui:FilterOperationArgument>
          <ui:FilterOperationArgument BooleanOperator="Or" Operator="EQ">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["Catalyst Invoice ID"]</InArgument>
            </ui:FilterOperationArgument.Column>
            <ui:FilterOperationArgument.Operand>
              <InArgument x:TypeArguments="x:String">[""]</InArgument>
            </ui:FilterOperationArgument.Operand>
          </ui:FilterOperationArgument>
        </scg:List>
      </ui:FilterDataTable.Filters>
      <ui:FilterDataTable.SelectColumns>
        <scg:List x:TypeArguments="InArgument" Capacity="4">
          <x:Null />
        </scg:List>
      </ui:FilterDataTable.SelectColumns>
    </ui:FilterDataTable>
    <Assign DisplayName="Assign out_SmartshetFile" sap:VirtualizedContainerService.HintSize="551.3333333333334,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_TempSmartSheetPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[str_SmartsheetFilePath]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Finishing Log Message" sap:VirtualizedContainerService.HintSize="551.3333333333334,96" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;SmartSheet_GetData execution finished. Smartsheet downloaded to &quot;+out_TempSmartSheetPath +&quot; location.&quot;]" />
  </Sequence>
</Activity>